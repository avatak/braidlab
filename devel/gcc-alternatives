#!/bin/bash

#
# gcc-alternatives
#
#  Set up alternative versions of GNU compiler collection.
#

# The MIT License (MIT)
#
# Copyright (c) 2015-2019 Jean-Luc Thiffeault <jeanluc@math.wisc.edu>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


# Base compiler name.
BASELANG=gcc
# Default version if no options specified.
BASEVER=4

CMDNAME=$(basename $0)

usage() {
    echo "Usage: $CMDNAME [-h] [PREFIX1 PREFIX2 ...]"
    echo "";
    echo "Set up alternative versions of GCC compilers.";
    echo;
    echo "Examples:";
    echo "";
    echo "   $CMDNAME ${BASELANG}-${BASEVER}   # install all compilers beginning with ${BASELANG}-${BASEVER}";
    echo "   $CMDNAME ${BASELANG}-4.4 ${BASELANG}-4.7   # compilers beginning with 4.4 or 4.7";
    echo "";
    echo "Options:";
    echo "";
    echo "   -h          Show help message.";
}

if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    usage
    exit 0
fi

# Get list from command-line, default prefix is gcc-4.
ARGS="${@:-${BASELANG}-${BASEVER}}"

REVLIST=
for i in ${ARGS}; do
    # Make an array with gcc- commands.
    REVLIST+=($(compgen -A command ${i} | sort -ur))
done
# Remove gcc- from each entry.
REVLIST=(${REVLIST[@]/${BASELANG}-/})
# Unique sort, with most recent first.
#IFS=$'\n' REVLIST=($(sort -ur <<<"${REVLIST[*]}"))

# Slaved languages (keep at same version as base).
SLAVELANGS=(
    g++
    gfortran
)

# The highest priority.
PRIORITY=100

# Clear existing alternatives.
sudo update-alternatives --remove-all ${BASELANG} &> /dev/null
for i in ${SLAVELANGS[@]}; do
    sudo update-alternatives --remove-all ${i} &> /dev/null
done

for i in ${REVLIST[@]}; do
    CMD="sudo update-alternatives"
    if hash ${BASELANG}-${i} 2>/dev/null; then
	CMD+=" --install /usr/bin/${BASELANG} ${BASELANG} "
	CMD+="`which ${BASELANG}-${i}` $PRIORITY"
    else
	# The base language must exist.
	printf 'Command %s not found.\n' ${BASELANG}-${i}
	exit 1
    fi
    for j in ${SLAVELANGS[@]}; do
	# If we can't find a slaved language, then that's fine.
	if hash ${j}-${i} 2>/dev/null; then
	    CMD+=" --slave /usr/bin/${j} ${j} `which ${j}-${i}`"
	fi
    done
    ${CMD} &> /dev/null
    PRIORITY=$((PRIORITY-10))    # decrease priority
done

# Prompt user for a choice.
sudo update-alternatives --config gcc
